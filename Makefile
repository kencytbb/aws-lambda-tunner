.PHONY: help clean test coverage lint format install install-dev docs serve-docs build upload\n\nhelp:\n\t@echo "Available commands:"\n\t@echo "  make install      Install the package"\n\t@echo "  make install-dev  Install with development dependencies"\n\t@echo "  make test         Run tests"\n\t@echo "  make coverage     Run tests with coverage"\n\t@echo "  make lint         Run linting"\n\t@echo "  make format       Format code"\n\t@echo "  make docs         Build documentation"\n\t@echo "  make serve-docs   Serve documentation locally"\n\t@echo "  make build        Build distribution packages"\n\t@echo "  make clean        Clean build artifacts"\n\ninstall:\n\tpip install -e .\n\ninstall-dev:\n\tpip install -e .[dev,docs]\n\tpre-commit install\n\ntest:\n\tpytest\n\ncoverage:\n\tpytest --cov=aws_lambda_tuner --cov-report=html --cov-report=term\n\nlint:\n\tflake8 aws_lambda_tuner tests\n\tmypy aws_lambda_tuner\n\tisort --check-only aws_lambda_tuner tests\n\tblack --check aws_lambda_tuner tests\n\nformat:\n\tisort aws_lambda_tuner tests\n\tblack aws_lambda_tuner tests\n\ndocs:\n\tcd docs && make html\n\nserve-docs:\n\tcd docs/_build/html && python -m http.server\n\nbuild:\n\tpython -m build\n\nupload:\n\tpython -m twine upload dist/*\n\nclean:\n\trm -rf build/\n\trm -rf dist/\n\trm -rf *.egg-info\n\trm -rf .coverage\n\trm -rf htmlcov/\n\trm -rf .pytest_cache/\n\trm -rf .mypy_cache/\n\tfind . -type d -name __pycache__ -exec rm -rf {} +\n\tfind . -type f -name "*.pyc" -delete\n\tfind . -type f -name "*.pyo" -delete\n
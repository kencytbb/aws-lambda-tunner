[build-system]\nrequires = ["setuptools>=61.0", "wheel"]\nbuild-backend = "setuptools.build_meta"\n\n[project]\nname = "aws-lambda-tuner"\nversion = "1.0.0"\ndescription = "A comprehensive tool for optimizing AWS Lambda functions for cost and performance"\nreadme = "README.md"\nauthors = [\n    {name = "AWS Lambda Tuner Contributors", email = "support@lambdatuner.com"}\n]\nlicense = {text = "MIT"}\nclassifiers = [\n    "Development Status :: 4 - Beta",\n    "Intended Audience :: Developers",\n    "License :: OSI Approved :: MIT License",\n    "Programming Language :: Python :: 3",\n    "Programming Language :: Python :: 3.8",\n    "Programming Language :: Python :: 3.9",\n    "Programming Language :: Python :: 3.10",\n    "Programming Language :: Python :: 3.11",\n    "Topic :: Software Development :: Libraries :: Python Modules",\n    "Topic :: System :: Monitoring",\n    "Topic :: Utilities"\n]\nrequires-python = ">=3.8"\ndependencies = [\n    "boto3>=1.28.0",\n    "click>=8.1.0",\n    "matplotlib>=3.7.0",\n    "seaborn>=0.12.0",\n    "numpy>=1.24.0",\n    "tabulate>=0.9.0",\n    "jinja2>=3.1.0",\n    "pyyaml>=6.0",\n    "rich>=13.5.0",\n    "tqdm>=4.65.0"\n]\n\n[project.urls]\nHomepage = "https://github.com/kencytbb/aws-lambda-tunner"\nDocumentation = "https://github.com/kencytbb/aws-lambda-tunner/wiki"\nRepository = "https://github.com/kencytbb/aws-lambda-tunner"\nIssues = "https://github.com/kencytbb/aws-lambda-tunner/issues"\n\n[project.scripts]\naws-lambda-tuner = "aws_lambda_tuner.cli:main"\n\n[project.optional-dependencies]\ndev = [\n    "pytest>=7.4.0",\n    "pytest-cov>=4.1.0",\n    "pytest-asyncio>=0.21.0",\n    "black>=23.7.0",\n    "flake8>=6.1.0",\n    "mypy>=1.4.1",\n    "isort>=5.12.0",\n    "pre-commit>=3.3.3",\n    "moto>=4.2.0"\n]\ndocs = [\n    "sphinx>=7.1.0",\n    "sphinx-rtd-theme>=1.3.0"\n]\n\n[tool.setuptools.packages.find]\ninclude = ["aws_lambda_tuner*"]\nexclude = ["tests*", "docs*", "examples*"]\n\n[tool.black]\nline-length = 100\ntarget-version = ['py38', 'py39', 'py310', 'py311']\ninclude = '\.pyi?$'\n\n[tool.isort]\nprofile = "black"\nline_length = 100\n\n[tool.mypy]\npython_version = "3.8"\nwarn_return_any = true\nwarn_unused_configs = true\ndisallow_untyped_defs = true\n\n[tool.pytest.ini_options]\ntestpaths = ["tests"]\npython_files = ["test_*.py"]\npython_classes = ["Test*"]\npython_functions = ["test_*"]\naddopts = "-v --tb=short"\n\n[tool.coverage.run]\nsource = ["aws_lambda_tuner"]\nomit = [\n    "*/tests/*",\n    "*/examples/*",\n    "*/__init__.py"\n]\n\n[tool.coverage.report]\nexclude_lines = [\n    "pragma: no cover",\n    "def __repr__",\n    "raise AssertionError",\n    "raise NotImplementedError",\n    "if __name__ == .__main__.:",\n    "if TYPE_CHECKING:"\n]\n